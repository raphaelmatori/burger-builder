{"version":3,"sources":["components/Order/Order.module.scss","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrder","token","userId","orders","Spinner","loading","id","marginTop","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,0GC+BXC,EA7BD,SAACC,GACX,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAIlC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKP,EAAGJ,MAAOI,EAAGJ,KARf,KAQuBI,EAAGH,OAR1B,QAWX,OACI,yBAAKW,UAAWC,IAAQC,OACpB,2CAAiBZ,GACjB,qCAAU,uCAAaa,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,O,wCCpBpEC,E,kLAGEC,KAAKxB,MAAMyB,aAAaD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,U,+BAIrD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAYb,OAXKL,KAAKxB,MAAM8B,UACZF,EAASJ,KAAKxB,MAAM4B,OAAOrB,KAAI,SAAAR,GAC3B,OACI,kBAACmB,EAAD,CACIH,IAAKhB,EAAMgC,GACX9B,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,YAMzB,yBAAKZ,MAAO,CAAEuB,UAAW,KACpBJ,O,GArBIK,aAyCNC,uBAfS,SAAAC,GACpB,MAAO,CACHP,OAAQO,EAAMpC,MAAM6B,OACpBE,QAASK,EAAMpC,MAAM+B,QACrBJ,MAAOS,EAAMC,KAAKV,MAClBC,OAAQQ,EAAMC,KAAKT,WAIA,SAAAU,GACvB,MAAO,CACHZ,aAAc,SAACC,EAAOC,GAAR,OAAmBU,EAASC,IAAoBZ,EAAOC,QAI9DO,CAA6CK,YAAiBhB,EAAQiB","file":"static/js/5.be8771e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__EbaF-\"};","import React from 'react';\nimport classes from './Order.module.scss';\n\nconst order = (props) => {\n    const ingredients = [];\n    for (let ingredientName in props.ingredients) {\n        ingredients.push({\n            name: ingredientName,\n            amount: props.ingredients[ingredientName]\n        });\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span\n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n            }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\n    })\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    );\n};\n\nexport default order;","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.onFetchOrder(this.props.token, this.props.userId);\n    }\n\n    render() {\n        let orders = <Spinner />\n        if (!this.props.loading) {\n            orders = this.props.orders.map(order => {\n                return (\n                    <Order\n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price}\n                    />\n                );\n            })\n        }\n        return (\n            <div style={{ marginTop: 66 }}>\n                {orders}\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrder: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}